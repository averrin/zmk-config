/*                KEY POSITIONS
  ╭─────────────────────╮ ╭─────────────────────╮
  │  00  01  02  03  04 │ │  05  06  07  08  09 │
  │  10  11  12  13  14 │ │  15  16  17  18  19 │
  │  20  21  22  23  24 │ │  25  26  27  28  29 │
  ╰───────╮  30  31  32 │ │  33  34  35 ╭───────╯
          ╰─────────────╯ ╰─────────────╯ */

#define COMBO_TAB_MS 25
// use global-quick-tap-ms for combos (requires PR 1387)
#define COMBO_HOOK global-quick-tap-ms = <75>;

/ {
    combos {
        compatible = "zmk,combos";
#define CONCAT2(x, y) x ## y
#define CONCAT(x, y) CONCAT2(x, y)
#define COMBO(pos, k, l) CONCAT(combo, __COUNTER__) { key-positions = <pos>; bindings = <k>; layers = <l>; timeout-ms = <COMBO_TAB_MS>; };
    // left-hand side combos
        COMBO(1 2, &kp RA(F4), BASE)
        COMBO(2 3, &kp LC(W), BASE)
        COMBO(1 2, &kp LG(Q), BASE_OSX)
        COMBO(2 3, &kp LG(W), BASE_OSX)
        COMBO(10 11, &kp RA(SINGLE_QUOTE), BASE BASE_OSX)
        COMBO(11 12, &kp ESCAPE, BASE BASE_OSX)
        COMBO(12 13, &kp TAB, BASE BASE_OSX)
        COMBO(21 22, &kp LC(C), BASE)
        COMBO(22 23, &kp LC(V), BASE)
        COMBO(21 22 23, &kp LC(X), BASE)
        COMBO(21 22, &kp LG(C), BASE_OSX)
        COMBO(22 23, &kp LG(V), BASE_OSX)
        COMBO(21 22 23, &kp LG(X), BASE_OSX)
        COMBO(20 21, &kp LC(Z), BASE)
        COMBO(20 21, &kp LG(Z), BASE_OSX)
        COMBO(23 24, &kp LC(LS(Z)), BASE)
        COMBO(23 24, &kp LG(LS(Z)), BASE_OSX)
        // vertical combos
        COMBO(0 10, &macro_deg_win, BASE)
        COMBO(0 10, &kp LA(LS(N8)), BASE_OSX)
        COMBO(1 11, &kp AT, BASE BASE_OSX)
        COMBO(2 12, &kp HASH, BASE BASE_OSX)
        COMBO(3 13, &eurodollar, BASE)
        COMBO(3 13, &eurodollar_OSX, BASE_OSX)
        COMBO(4 14, &kp PERCENT, BASE BASE_OSX)
        COMBO(11 21, &kp GRAVE, BASE BASE_OSX)
        COMBO(12 22, &kp BACKSLASH, BASE BASE_OSX)
        COMBO(13 23, &kp EQUAL, BASE BASE_OSX)
        COMBO(14 24, &kp TILDE, BASE BASE_OSX)
    // right-hand side combos
        // parenthesis combos
        COMBO(6 7, &kp LPAR, BASE BASE_OSX)
        COMBO(7 8, &kp RPAR, BASE BASE_OSX)
        COMBO(6 7 8, &macro_par, BASE BASE_OSX)
        // brackets combos
        COMBO(16 17, &kp LBKT, BASE BASE_OSX)
        COMBO(17 18, &kp RBKT, BASE BASE_OSX)
        COMBO(16 17 18, &macro_bkt, BASE BASE_OSX)
        // braces combos
        COMBO(26 27, &kp LBRC, BASE BASE_OSX)
        COMBO(27 28, &kp RBRC, BASE BASE_OSX)
        COMBO(26 27 28, &macro_brc, BASE BASE_OSX)
        // vertical combos
        COMBO(5 15, &kp CARET, BASE BASE_OSX)
        COMBO(6 16, &kp PLUS, BASE BASE_OSX)
        COMBO(7 17, &kp ASTERISK, BASE BASE_OSX)
        COMBO(8 18, &kp AMPERSAND, BASE BASE_OSX)
        COMBO(9 19, &kp GREATER_THAN, BASE BASE_OSX)
        COMBO(15 25, &kp UNDERSCORE, BASE BASE_OSX)
        COMBO(16 26, &kp MINUS, BASE BASE_OSX)
        COMBO(17 27, &kp SLASH, BASE BASE_OSX)
        COMBO(18 28, &kp PIPE, BASE BASE_OSX)
        COMBO(19 29, &kp LESS_THAN, BASE BASE_OSX)
        // lock layer
        COMBO(0 9 32 33, &tog LOCKL, BASE BASE_OSX LOCKL)
    };
};
